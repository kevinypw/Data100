model.logpop15 <- lm(logpop15 ~ water...32 + dst011...33 + dst040...34 + dst130...35 + dst140...36 + dst150...37 + dst160...38 + dst190...39 +dst200...40 + topography...41 + slope...42 + night...43, data=gtm_adm2)
summary(model.sums)
summary(model.means)
summary(model.logpop15)
names(lulc_stack) <- c("water...19" , "dst011...20" , "dst040...21" , "dst130...22" , "dst140...23" , "dst150...24" , "dst160...25" , "dst190...26" , "dst200...27" , "topography...28" , "slope...29" , "night...30")
lulc_stack1 <- lulc_stack
names(lulc_stack1) <- c("water...32" , "dst011...33" , "dst040...34" , "dst130...35" , "dst140...36" , "dst150...37" , "dst160...38" , "dst190...39" , "dst200...40" , "topography...41" , "slope...42" , "night...43")
predicted_values_sums <- raster::predict(lulc_stack, model.sums)
predicted_values_means <- raster::predict(lulc_stack1, model.means)
predicted_values_logpop15 <- raster::predict(lulc_stack1, model.logpop15)
save(predicted_values_sums, predicted_values_means, predicted_values_logpop15, file = "proj4_predicted_values.RData")
load("proj4_predicted_values.RData")
# gtm_pred_val_sums <- exactextractr::exact_extract(predicted_values_sums, gtm_adm2, force_df=TRUE, fun=c('count'))
# gtm_pred_val_means <- exactextractr::exact_extract(predicted_values_means, gtm_adm2,  force_df=TRUE, fun=c('count'))
# gtm_pred_val_logpop15 <- exactextractr::exact_extract(predicted_values_logpop15, gtm_adm2,  force_df=TRUE, fun=c('count'))
# save(gtm_pred_val_sums, gtm_pred_val_means, gtm_pred_val_logpop15, file = "predicted_values_adm3s.RData")
load("predicted_values_adm3s.RData")
totals <- cbind.data.frame(preds_sums = gtm_pred_val_sums$count,
preds_means = gtm_pred_val_means$count,
resp_logpop = gtm_pred_val_logpop15$count)
gtm_adm2 <- bind_cols(gtm_adm2, totals)
predicted_totals_sums <- rasterize(gtm_adm2, predicted_values_sums, field = "preds_sums")
predicted_totals_means <- rasterize(gtm_adm2, predicted_values_sums, field = "preds_means")
predicted_totals_logpop <- rasterize(gtm_adm2, predicted_values_sums, field = "resp_logpop")
gridcell_proportions_sums  <- predicted_values_sums / predicted_totals_sums
gridcell_proportions_means  <- predicted_values_means / predicted_totals_means
gridcell_proportions_logpop  <- predicted_values_logpop15 / predicted_totals_logpop
# cellStats(gridcell_proportions_sums, sum)
# cellStats(gridcell_proportions_means, sum)
# cellStats(gridcell_proportions_logpop, sum)
population_adm2 <- rasterize(gtm_adm2, predicted_values_sums, field = "pop15")
population_sums <- gridcell_proportions_sums * population_adm2
population_means <- gridcell_proportions_means * population_adm2
population_logpop <- gridcell_proportions_logpop * population_adm2
# cellStats(population_sums, sum)
# cellStats(population_means, sum)
# cellStats(population_logpop, sum)
# sum(gtm_adm2$pop15)
sum_diff_resampled <- resample(gtm_pop15, population_sums)
diff_sums <- population_sums - sum_diff_resampled
mean_diff_resampled <- resample(gtm_pop15, population_means)
diff_means <- population_sums - mean_diff_resampled
log_diff_resampled <- resample(gtm_pop15, population_logpop)
diff_logpop <- population_logpop - mean_diff_resampled
plot(population_sums)
plot(diff_sums)
rasterVis::plot3D(diff_sums)
cellStats(abs(diff_sums), sum)
plot(population_means)
plot(diff_means)
rasterVis::plot3D(diff_means)
cellStats(abs(diff_means), sum)
plot(population_logpop)
plot(diff_logpop)
rasterVis::plot3D(diff_logpop)
cellStats(abs(diff_logpop), sum)
plot(gtm_pop15)
rgl.snapshot("diff", fmt = "png", top = TRUE )
plot(diff_sums)
plot(diff_means)
plot(diff_logpop)
plot(diff_means)
rm(list=ls(all=TRUE))
# install.packages("raster", dependencies = TRUE)
# install.packages("sf", dependencies = TRUE)
# install.packages("tidyverse", dependencies = TRUE)
# install.packages("doParallel", dependencies = TRUE)
# install.packages("snow", dependencies = TRUE)
# install.packages("rgl", dependencies = TRUE)
# install.packages("rasterVis", dependencies = TRUE)
# install.packages("tmap", dependencies = TRUE)
library(sf)
library(raster)
library(tidyverse)
library(doParallel)
library(snow)
library(rgl)
library(rasterVis)
library(exactextractr)
# setwd("D:/programming/Data100/proj_dir/")
# LOAD STACK
setwd("D:/programming/Data100/proj_dir/lulc/")
f_names <- list.files(pattern=regex("esaccilc_dst.*\\.tif$"), recursive = TRUE)
lulc_stack <- stack(lapply(f_names, function(i) raster(i, band=1)))
trunc_names <- sub("_100m_2015.tif", "", sub("gtm_esaccilc_", "", f_names))
names(lulc_stack) <- trunc_names
topography <- raster("gtm_srtm_topo_100m.tif")
slope <- raster("gtm_srtm_slope_100m.tif")
night <- raster("gtm_viirs_100m_2015.tif")
lulc_stack <- addLayer(lulc_stack, topography, slope, night)
names(lulc_stack)[c(1,10:12)] <- c("water","topo","slope", "night")
#import administrative sublevels
setwd("D:/programming/Data100/proj_dir/data/guatemala/")
gtm_pop15 <- raster("GTM_ppp_v2b_2015.tif")
gtm_adm0 <- sf::read_sf("gadm36_GTM_0.shp")
gtm_adm1 <- sf::read_sf("gadm36_GTM_1.shp")
gtm_adm2 <- sf::read_sf("gadm36_GTM_2.shp")
setwd("D:/programming/Data100/proj_dir/")
load("GTM_adm1_pop.RData")
load("GTM_adm2_pop.RData")
load("lulc_vals_adm2.RData")
lulc_ttls_adm2 <- lulc_vals_adm2 %>%
group_by(ID) %>%
summarize_all(sum, na.rm = TRUE)
gtm_adm2 <- bind_cols(gtm_adm2, lulc_ttls_adm2)
#Mask RasterStack
lulc_brick <- mask(lulc_stack, gtm_adm0)
#estimate linear model
linear_model <- lm(pop21 ~ water , dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topo + slope + night, data=gtm_adm2)
predicted_values <- raster::predict(lulc_brick, linear_model, progress="window")
base <- predicted_values - minValue(predicted_values)
#get base adm2
setwd("D:/programming/Data100/proj_dir/data/guatemala/")
#parallel
# ncores <- detectCores() - 1
# beginCluster(ncores)
# pred_vals_adm2 <- raster::extract(base, gtm_adm2, df=TRUE)
# endCluster()
#total and bind columns
# pred_ttls_adm2 <- aggregate(. ~ ID, pred_vals_adm2, sum)
# gtm_adm2 <- bind_cols(gtm_adm2, pred_ttls_adm2)
# save(gtm_adm2, file = "proj4_temp_adm2.RData")
load("proj4_temp_adm2.RData")
#predicted totals  and proportion of total
rasterized_pred_ttls_adm2 <- rasterize(gtm_adm2, predicted_values, field = "layer")
proportion_of_total_adm2 <- base / rasterized_pred_ttls_adm2
#predicted totals and population 2015
rasterized_pop15_adm2 <- rasterize(gtm_adm2, predicted_values, field = "pop21")
population_gtm_adm2 <- proportion_of_total_adm2 * rasterized_pop15_adm2
##########################################################################
#Investigate Margins of Error
pop_diff_resampled <- resample(population_gtm_adm2, gtm_pop15)
pop_diff_15 <- pop_diff_resampled - gtm_pop15
cellStats(abs(pop_diff_15), sum)
plot(pop_diff_15)
gtm_city_adm2 <- gtm_adm2 %>%
filter(substr(NAME_2, 1, 4) == "ZONA")
# plot(gtm_city_adm2)
urban_diff <- mask(pop_diff_15, gtm_city_adm2)
urban_pop <- mask(population_gtm_adm2, gtm_city_adm2)
b_box = c(-90.647711, -90.350940, 14.506167, 14.719152)
gtm_city_diff <- crop(urban_diff, b_box)
gtm_city_pop <- crop(urban_pop, b_box)
#estimate linear model
linear_model <- lm(pop21 ~ water , dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topo + slope + night, data=gtm_adm2)
View(lbr_adm2)
#estimate linear model
linear_model <- lm(pop21 ~ water , dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topo + slope + night, data=gtm_adm2)
#estimate linear model
linear_model <- lm(pop21 ~ water , dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topo + slope + night, data=gtm_adm2)
rm(list=ls(all=TRUE))
setwd("D:/programming/Data100/proj_dir/lulc/")
f_names <- list.files(pattern=regex("esaccilc_dst.*\\.tif$"), recursive = TRUE)
lulc_stack <- stack(lapply(f_names, function(i) raster(i, band=1)))
trunc_names <- sub("_100m_2015.tif", "", sub("gtm_esaccilc_", "", f_names))
names(lulc_stack) <- trunc_names
topography <- raster("gtm_srtm_topo_100m.tif")
slope <- raster("gtm_srtm_slope_100m.tif")
night <- raster("gtm_viirs_100m_2015.tif")
lulc_stack <- addLayer(lulc_stack, topography, slope, night)
names(lulc_stack)[c(1,10:12)] <- c("water","topo","slope", "night")
#import administrative sublevels
setwd("D:/programming/Data100/proj_dir/data/guatemala/")
gtm_pop15 <- raster("GTM_ppp_v2b_2015.tif")
gtm_adm0 <- sf::read_sf("gadm36_GTM_0.shp")
gtm_adm1 <- sf::read_sf("gadm36_GTM_1.shp")
gtm_adm2 <- sf::read_sf("gadm36_GTM_2.shp")
rm(gtm_adm0)
gtm_adm0 <- sf::read_sf("gadm36_GTM_0.shp")
load("lulc_vals_adm2.RData")
lulc_stack
lulc_vals_adm2 <- exactextractr::exact_extract(lulc_stack, gtm_adm2, force_df=TRUE, fun=c('count'))
lulc_vals_adm2 <- exactextractr::exact_extract(lulc_stack, gtm_adm2, force_df=TRUE, fun=c('sum'))
gtm_adm2 <- bind_cols(gtm_adm2, lulc_vals_adm2)
gtm_adm
gtm_adm2
#Mask RasterStack
lulc_brick <- mask(gtm_adm2, gtm_adm0)
#Mask RasterStack
lulc_brick <- mask(lulc_stack, gtm_adm0)
gtm_pd_pop15 <- raster("gtm_pd_2015_1km.tif")
pop_vals_adm2 <- exactextractr::exact_extract(gtm_pd_pop15, gtm_adm2, force_df=TRUE, fun=c('sum'))
gtm_adm2 <- bind_cols(gtm_adm2, pop_vals_adm2)
#estimate linear model
linear_model <- lm(sum ~ sum.water , sum.dst011 + sum.dst040 + sum.dst130 +
sum.dst140 + sum.dst150 + sum.dst160 + sum.dst190 +
sum.dst200 + sum.topo + sum.slope + sum.night, data=gtm_adm2)
#estimate linear model
linear_model <- lm(sum ~ sum.water + sum.dst011 + sum.dst040 + sum.dst130 +
sum.dst140 + sum.dst150 + sum.dst160 + sum.dst190 +
sum.dst200 + sum.topo + sum.slope + sum.night, data=gtm_adm2)
predicted_values <- raster::predict(lulc_brick, linear_model, progress="window")
lulc_brick
gtm_adm2
rename(gtm_adm2, pop15 = sum)
rename(gtm_adm2, water = sum.water)
rename(gtm_adm2, dst011 = sum.dst011)
rename(gtm_adm2, dst040 = sum.dst040)
rename(gtm_adm2, dst130 = sum.dst130)
rename(gtm_adm2, dst140 = sum.dst140)
rename(gtm_adm2, dst150 = sum.dst150)
rename(gtm_adm2, dst160 = sum.dst160)
rename(gtm_adm2, dst170 = sum.dst170)
rename(gtm_adm2, dst190 = sum.dst190)
rename(gtm_adm2, dst200 = sum.dst200)
rename(gtm_adm2, topo = sum.topo)
rename(gtm_adm2, slope = sum.slope)
rename(gtm_adm2, night = sum.night)
gtm_adm2 <- rename(gtm_adm2, pop15 = sum)
gtm_adm2 <- rename(gtm_adm2, night = sum.night)
gtm_adm2 <- rename(gtm_adm2, water = sum.water)
summary(linear_model)
linear_model$coefficients
names(linear_model$coefficients) <- c('water', 'dst040', 'dst130', 'dst140', 'dst150', 'dst160', 'dst190', 'dst200', 'topo', 'slope', 'night')
names(linear_model$coefficients) <- c('water', 'dst040', 'dst130', 'dst140', 'dst150', 'dst160', 'dst190', 'dst200', 'topo', 'slope', 'night')
linear_model$coefficients
names(linear_model$coefficients) <- c('(Intercept)', 'water','dst011', 'dst040', 'dst130', 'dst140', 'dst150', 'dst160', 'dst190', 'dst200', 'topo', 'slope', 'night')
linear_model$coefficients
predicted_values <- raster::predict(lulc_brick, linear_model, progress="window")
names(linear_model$model) <- c('(Intercept)', 'water','dst011', 'dst040', 'dst130', 'dst140', 'dst150', 'dst160', 'dst190', 'dst200', 'topo', 'slope', 'night')
predicted_values <- raster::predict(lulc_brick, linear_model, progress="window")
lulc_brick
linear_model
lulc_vals_adm2 <- exactextractr::exact_extract(lulc_stack, gtm_adm2, force_df=TRUE)
lulc_vals_adm2 <- exactextractr::exact_extract(lulc_stack, gtm_adm2, force_df=TRUE, fun='sum')
View(lulc_vals_adm2)
lulc_vals_adm2 <- exactextractr::exact_extract(lulc_stack, gtm_adm2, force_df=TRUE, fun=c('sum'), append_cols=FALSE)
lulc_vals_adm2
View(lulc_vals_adm2)
names(lulc_vals_adm2) <- c('water','dst011', 'dst040', 'dst130', 'dst140', 'dst150', 'dst160', 'dst190', 'dst200', 'topo', 'slope', 'night')
names(pop_vals_adm2) <- c('pop15')
rm(gtm_adm2)
gtm_adm2 <- sf::read_sf("gadm36_GTM_2.shp")
gtm_adm2 <- bind_cols(gtm_adm2, lulc_vals_adm2)
gtm_adm2 <- bind_cols(gtm_adm2, pop_vals_adm2)
#estimate linear model
linear_model <- lm(pop15 ~ water + dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topo + slope + night, data=gtm_adm2)
predicted_values <- raster::predict(lulc_brick, linear_model, progress="window")
predicted_values
base <- predicted_values - minValue(predicted_values)
cellStats(base, sum)
cellStats(predicted_values, sum)
#parallel
pred_vals_adm2 <- exact_extract(base, gtm_adm2, force_d=TRUE, fun=c('sum'))
#parallel
pred_vals_adm2 <- exact_extract(base, gtm_adm2, force_df=TRUE, fun=c('sum'))
names(pred_vals_adm2) <- c('layer')
gtm_adm2 <- bind_cols(gtm_adm2, pred_ttls_adm2)
gtm_adm2 <- bind_cols(gtm_adm2, pred_vals_adm2)
#get base adm2
setwd("D:/programming/Data100/proj_dir/data/guatemala/")
#total and bind columns
# pred_ttls_adm2 <- aggregate(. ~ ID, pred_vals_adm2, sum)
# gtm_adm2 <- bind_cols(gtm_adm2, pred_ttls_adm2)
save(gtm_adm2, file = "proj4_temp_adm2.RData")
rasterized_pred_ttls_adm2 <- rasterize(gtm_adm2, predicted_values, field = "layer")
proportion_of_total_adm2 <- base / rasterized_pred_ttls_adm2
rasterized_pop15_adm2 <- rasterize(gtm_adm2, predicted_values, field = "pop15")
population_gtm_adm2 <- proportion_of_total_adm2 * rasterized_pop15_adm2
cellStats(population_gtm_adm2, sum)
sum(gtm_adm2$pop15)
pop_diff_15 <- population_gtm_adm2 - gtm_pop15
pop_diff_resampled <- resample(population_gtm_adm2, gtm_pop15)
pop_diff_15 <- pop_diff_resampled - gtm_pop15
cellStats(abs(pop_diff_15), sum)
cellStats(pop_diff_15, sum)
19461562 - 3438636
plot(pop_diff_15)
gtm_city_adm2 <- gtm_adm2 %>%
filter(substr(NAME_2, 1, 4) == "ZONA")
# plot(gtm_city_adm2)
urban_diff <- mask(pop_diff_15, gtm_city_adm2)
urban_pop <- mask(population_gtm_adm2, gtm_city_adm2)
b_box = c(-90.647711, -90.350940, 14.506167, 14.719152)
gtm_city_diff <- crop(urban_diff, b_box)
gtm_city_pop <- crop(urban_pop, b_box)
plot(gtm_city_diff)
View(pop_diff_15)
plot(pop_diff_15 ^ 2)
plot(pop_diff_15 * 10)
plot(log(pop_diff_15))
plot(log(abs(pop_diff_15))
plot(log(abs(pop_diff_15))
)
plot(log(abs(pop_diff_15))) +
geom_sf(data = gtm_adm2,
size = 1,
fill = NA)
ggplot(log(abs(pop_diff_15))) +
geom_sf(data = gtm_adm2,
size = 1,
fill = NA)
ggplot(log(abs(pop_diff_15))) +
geom_sf(data = original_gtm_adm2,
size = 1,
fill = NA)
original_gtm_adm2 <- sf::read_sf("gadm36_GTM_2.shp")
View(original_gtm_adm2)
mixco_adm2 <- gtm_adm2 %>%
filter(NAME_2 == "Mixco")
# plot(gtm_city_adm2)
m_urban_diff <- mask(pop_diff_15, mixco_adm2)
m_urban_pop <- mask(population_gtm_adm2, mixco_adm2)
plot(mixco_diff)
b_box = c(-90.647711, -90.350940, 14.506167, 14.719152)
mixco_diff <- crop(m_urban_diff, b_box)
mixco_pop <- crop(m_urban_pop, b_box)
plot(mixco_diff)
m_box = c(-90.647711, -90.5, 14.53, 14.800000)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
plot(mixco_diff)
m_box = c(-90.647711, -90.5, 14.53, 14.75)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
plot(mixco_diff)
m_box = c(-90.65, -90.6, 14.53, 14.75)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
plot(mixco_diff)
m_box = c(-90.65, -90.5, 14.53, 14.75)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
plot(mixco_diff)
plot(mixco_diff)
jpeg(file="proj4_mixco_diff.jpeg")
jpeg(file="proj4_mixco_adm2.jpeg")
plot(mixco_diff)
dev.off()
View(gtm_adm1)
jpeg(file="proj4_mixco_adm2.jpeg")
plot(mixco_pop)
dev.off()
plot(mixco_pop)
lines(mixco_adm1)
mixco_adm1 <- gtm_adm2 %>%
filter(NAME_1 == "Guatemala")
lines(mixco_adm1)
points(mixco_adm1)
plot(mixco_adm1)
ggplot(mixco_pop)
ggplot(mixco_adm1)
ggplot(mixco_adm1) + geom_sf(size = .15)
plot(mixco_adm1)
ggplot(mixco_adm1) + geom_sf(size = .15)
ggplot(mixco_adm1) +
geom_sf(size = .15) +
geom_area(data=mixco_pop)
mixco_pop$layer
ggplot(mixco_adm1) +
geom_sf(size = .15) +
geom_area(data=mixco_pop$layer)
View(mixco_pop)
plot(mixco_adm1)
plot(mixco_adm1$NL_NAME_2)
plot(mixco_adm1$GID_0)
plot(mixco_adm1$layer)
plot(mixco_adm1$pop15)
plot(mixco_pop, mixco_adm1$pop15)
plot(mixco_pop, mixco_adm1)
jpeg(file="proj4_mixco_adm1.jpeg")
plot(mixco_pop, main="Population in Mixco at the ADM2 Level")
dev.off()
mixco_adm1 <- gtm_adm2 %>%
filter(NAME_1 == "Guatemala")
# plot(gtm_city_adm2)
m_urban_diff <- mask(pop_diff_15, mixco_adm1)
m_urban_pop <- mask(population_gtm_adm2, mixco_adm1)
m_box = c(-90.65, -90.5, 14.53, 14.75)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
jpeg(file="proj4_mixco_adm1.jpeg")
plot(mixco_pop, main="Population in Mixco at the ADM1 Level")
dev.off()
m_box = c(-91, -90, 14, 15)
mixco_diff <- crop(m_urban_diff, m_box)
mixco_pop <- crop(m_urban_pop, m_box)
# jpeg(file="proj4_mixco_adm1.jpeg")
plot(mixco_pop, main="Population in Mixco at the ADM1 Level")
m_box = c(-90.8, -90.2, 14.2, 15)
jpeg(file="proj4_mixco_adm1.jpeg")
plot(mixco_pop, main="Population in Mixco at the ADM1 Level")
dev.off()
gtm_city_adm2 <- gtm_adm2 %>%
filter(substr(NAME_2, 1, 4) == "ZONA")
# plot(gtm_city_adm2)
urban_diff <- mask(pop_diff_15, gtm_city_adm2)
urban_pop <- mask(population_gtm_adm2, gtm_city_adm2)
b_box = c(-90.647711, -90.350940, 14.506167, 14.719152)
gtm_city_diff <- crop(urban_diff, b_box)
gtm_city_pop <- crop(urban_pop, b_box)
plot(gtm_city_pop, main="Population in Guatemala City at the ADM2 Level")
jpeg(file="proj4_gtmcity_adm2.jpeg")
plot(gtm_city_pop, main="Population in Guatemala City at the ADM2 Level")
dev.off()
setwd("D:/programming/Data100/proj_dir/data/images/")
jpeg(file="proj4_gtmcity_adm2.jpeg")
plot(gtm_city_pop, main="Population in Guatemala City at the ADM2 Level")
dev.off()
jpeg(file="proj4_gtmcity_adm1.jpeg")
plot(mixco_pop, main="Population in Guatemala City at the ADM1 Level")
dev.off()
################################################################################
#Investigating and Comparing Results
rm(list=ls(all=TRUE))
setwd("D:/programming/Data100/proj_dir/lulc/")
f_names <- list.files(pattern=regex("esaccilc_dst.*\\.tif$"), recursive = TRUE)
lulc_stack <- stack(lapply(f_names, function(i) raster(i, band=1)))
trunc_names <- sub("_100m_2015.tif", "", sub("gtm_esaccilc_", "", f_names))
names(lulc_stack) <- trunc_names
topography <- raster("gtm_srtm_topo_100m.tif")
slope <- raster("gtm_srtm_slope_100m.tif")
night <- raster("gtm_viirs_100m_2015.tif")
lulc_stack <- addLayer(lulc_stack, topography, slope, night)
names(lulc_stack)[c(1,10:12)] <- c("water","topo","slope", "night")
setwd("D:/programming/Data100/proj_dir/data/guatemala/")
gtm_pop15 <- raster("GTM_ppp_v2b_2015.tif")
gtm_adm0 <- sf::read_sf("gadm36_GTM_0.shp")
lulc_stack <- crop(lulc_stack, gtm_adm0)
lulc_stack <- mask(lulc_stack, gtm_adm0)
writeRaster(lulc_stack, filename="proj4_lulc_stack.tif", overwrite = TRUE)
lulc_stack <- brick("proj4_lulc_stack.tif")
names(lulc_stack) <- c("water", "dst011" , "dst040", "dst130", "dst140", "dst150",
"dst160", "dst190", "dst200", "topography", "slope", "night")
gtm_adm2 <- sf::read_sf("gadm36_GTM_2.shp")
pop_vals_adm2 <- exact_extract(gtm_pop15, gtm_adm2, force_df = TRUE, fun=c("sum"))
gtm_adm2 <- gtm_adm2 %>%
add_column(pop15 = pop_vals_adm2$pop15)
gtm_adm2 <- gtm_adm2 %>%
mutate(area = st_area(gtm_adm2) %>%
units::set_units(km^2)) %>%
mutate(density = pop15 / area)
names(pop_vals_adm2) = c("pop15")
gtm_adm2 <- gtm_adm2 %>%
add_column(pop15 = pop_vals_adm2$pop15)
gtm_adm2 <- gtm_adm2 %>%
mutate(area = st_area(gtm_adm2) %>%
units::set_units(km^2)) %>%
mutate(density = pop15 / area)
lulc_vals_adm2 <- exact_extract(lulc_stack, gtm_adm2, force_df=TRUE, fun=c("mean", "sum"))
names(lulc_vals_adm2) <- c("water", "dst011" , "dst040", "dst130", "dst140", "dst150",
"dst160", "dst190", "dst200", "topography", "slope", "night",
"water1", "dst0111" , "dst0401", "dst1301", "dst1401", "dst1501",
"dst1601", "dst1901", "dst2001", "topography1", "slope1", "night1")
gtm_adm2 <- bind_cols(gtm_adm2, lulc_vals_adm2)
model.sums <- lm(pop15 ~ water + dst011 + dst040 + dst130 + dst140 + dst150 + dst160 + dst190 + dst200 + topography + slope + night, data=gtm_adm2)
model.means <- lm(pop15 ~ water1 + dst0111 + dst0401 + dst1301 + dst1401 + dst1501 + dst1601 + dst1901 + dst2001 + topography1 + slope1 + night1, data=gtm_adm2)
gtm_adm2$logpop15 <- log(gtm_adm2$pop15)
model.logpop15 <- lm(logpop15 ~ water1 + dst0111 + dst0401 + dst1301 + dst1401 + dst1501 + dst1601 + dst1901 + dst2001 + topography1 + slope1 + night1, data=gtm_adm2)
summary(model.sums)
summary(model.means)
summary(model.logpop15)
lulc_stack
lulc_stack1 <- lulc_stack
names(lulc_stack1) <- c("water1", "dst0111" , "dst0401", "dst1301", "dst1401", "dst1501",
"dst1601", "dst1901", "dst2001", "topography1", "slope1", "night1")
predicted_values_sums <- raster::predict(lulc_stack, model.sums)
predicted_values_means <- raster::predict(lulc_stack1, model.means)
predicted_values_logpop15 <- raster::predict(lulc_stack1, model.logpop15)
gtm_pred_val_sums <- exactextractr::exact_extract(predicted_values_sums, gtm_adm2, force_df=TRUE, fun=c('sum'))
gtm_pred_val_means <- exactextractr::exact_extract(predicted_values_means, gtm_adm2,  force_df=TRUE, fun=c('sum'))
gtm_pred_val_logpop15 <- exactextractr::exact_extract(predicted_values_logpop15, gtm_adm2,  force_df=TRUE, fun=c('sum'))
totals <- cbind.data.frame(preds_sums = gtm_pred_val_sums$sum,
preds_means = gtm_pred_val_means$sum,
resp_logpop = gtm_pred_val_logpop15$sum)
gtm_adm2 <- bind_cols(gtm_adm2, totals)
predicted_totals_sums <- rasterize(gtm_adm2, predicted_values_sums, field = "preds_sums")
predicted_totals_means <- rasterize(gtm_adm2, predicted_values_sums, field = "preds_means")
predicted_totals_logpop <- rasterize(gtm_adm2, predicted_values_sums, field = "resp_logpop")
gridcell_proportions_sums  <- predicted_values_sums / predicted_totals_sums
gridcell_proportions_means  <- predicted_values_means / predicted_totals_means
gridcell_proportions_logpop  <- predicted_values_logpop15 / predicted_totals_logpop
population_adm2 <- rasterize(gtm_adm2, predicted_values_sums, field = "pop15")
population_sums <- gridcell_proportions_sums * population_adm2
population_means <- gridcell_proportions_means * population_adm2
population_logpop <- gridcell_proportions_logpop * population_adm2
sum_diff_resampled <- resample(gtm_pop15, population_sums)
diff_sums <- population_sums - sum_diff_resampled
mean_diff_resampled <- resample(gtm_pop15, population_means)
diff_means <- population_sums - mean_diff_resampled
log_diff_resampled <- resample(gtm_pop15, population_logpop)
diff_logpop <- population_logpop - mean_diff_resampled
plot(population_sums)
plot(diff_sums)
png(file="proj4_predicted_gtm_sums.png")
plot(population_sums, main="Plot of Predicted Population in Guatemala")
dev.off()
cellStats(population_sums, sum)
png(file="proj4_diff_gtm_sums.png")
plot(diff_sums, main="Plot of Difference between Predicted and Actual Population in Guatemala")
dev.off()
png(file="proj4_diff_gtm_sums.png")
plot(diff_sums, main="Plot of Difference between Predicted \non and Actual Population in Guatemala")
dev.off()
setwd("D:/programming/Data100/proj_dir/images/")
png(file="proj4_predicted_gtm_means.png")
plot(population_means,  main="Plot of Predicted Population in Guatemala")
dev.off()
png(file="proj4_diff_gtm_means.png")
plot(diff_means, main="Plot of Difference between Predicted \non and Actual Population in Guatemala")
dev.off()
png(file="proj4_predicted_gtm_logpop.png")
plot(population_logpop,  main="Plot of Predicted Population in Guatemala")
dev.off()
png(file="proj4_diff_gtm_logpop.png")
plot(diff_logpop, main="Plot of Difference between Predicted and Actual Population in Guatemala")
dev.off()
rasterVis::plot3D(diff_sums) #Plot of Difference between Predicted and Actual Population in Guatemala
rasterVis::plot3D(diff_means)
rasterVis::plot3D(diff_sums) #Plot of Difference between Predicted and Actual Population in Guatemala
rasterVis::plot3D(diff_means)
rasterVis::plot3D(diff_logpop)
